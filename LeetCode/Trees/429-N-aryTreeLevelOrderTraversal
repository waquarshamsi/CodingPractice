/**
 * Link: https://leetcode.com/problems/n-ary-tree-level-order-traversal/
 * @file 429-N-aryTreeLevelOrderTraversal
 * @author Waquar Shamsi
 * @version 0.1
 * @date 2022-09-05
 *
 */
#include <bits/stdc++.h>
using namespace std;

class Node
{
public:
    int val;
    vector<Node *> children;

    Node() {}

    Node(int _val)
    {
        val = _val;
    }

    Node(int _val, vector<Node *> _children)
    {
        val = _val;
        children = _children;
    }
};

class Solution
{
public:
    vector<vector<int>> levelOrder(Node *root)
    {
        vector<vector<int>> traversal;
        queue<pair<int, Node *>> q; /* pair<Node*, level> */
        int level;
        if (root != NULL)
        {
            q.push(make_pair(1, root));
            while (!q.empty())
            {
                level = q.front().first;
                root = q.front().second;
                if (traversal.size() == level - 1)
                {
                    // add new vector in the vector for the level
                    vector<int> temp_vector;
                    traversal.push_back(temp_vector);
                }
                traversal[level - 1].push_back(root->val);
                for (Node *node : root->children)
                {
                    if (node != NULL)
                    {
                        q.push(make_pair(level + 1, node));
                    }
                }
                q.pop();
            }
        }
        return traversal;
    }
};